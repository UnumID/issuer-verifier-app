version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.22
  aws-eks: circleci/aws-eks@0.2.3
  kubernetes: circleci/kubernetes@0.4.0

jobs:
  lint-and-test-job:
    docker:
      - image: circleci/node:14.15.0
    steps:
      - checkout
      - restore_cache:
          keys:
            # Find a cache corresponding to this specific package-lock.json checksum
            # when this file is changed, this key will fail
            - v1-npm-deps-{{ checksum "package-lock.json" }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}--{{ arch }}

      - run: npm install

      - save_cache:
          key: v1-deps-{{ checksum "package-lock.json" }}
          paths:
            - node_modules

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}--{{ arch }}
          paths:
            - node_modules

      - run: npm run lint
      
      # - run:
          # name: Jest Tests
          # command: npm test

  build-and-push-image:
    executor: aws-cli/default
    parameters:
      reg:
        type: string
        default: "248606629437.dkr.ecr.us-west-2.amazonaws.com"
      repo:
        type: string
    steps:
      - checkout
      - aws-cli/setup
      - setup_remote_docker:
          version: 19.03.13
      - run:
          command: |
            echo Logging in to Amazon ECR...
            $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
            echo Building the Docker image...
            DOCKER_BUILDKIT=1 docker build -t ${CIRCLE_SHA1} --ssh github="$HOME/.ssh/id_rsa" .
            docker tag ${CIRCLE_SHA1} << parameters.reg >>/<< parameters.repo >>:dev-latest
            docker tag ${CIRCLE_SHA1} << parameters.reg >>/<< parameters.repo >>:dev-"${CIRCLE_BRANCH}-${CIRCLE_BUILD_NUM}"
            echo Pushing the Docker image...
            docker push << parameters.reg >>/<< parameters.repo >>:dev-"${CIRCLE_BRANCH}-${CIRCLE_BUILD_NUM}"
            docker push << parameters.reg >>/<< parameters.repo >>:dev-latest
          name: Update container image

  build-and-push-image-release:
    executor: aws-cli/default
    parameters:
      reg:
        type: string
        default: "248606629437.dkr.ecr.us-west-2.amazonaws.com"
      repo:
        type: string
    steps:
      - checkout
      - aws-cli/setup
      - setup_remote_docker:
          version: 19.03.13
      - run:
          command: |
            echo Logging in to Amazon ECR...
            $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
            echo Building the Docker image...
            DOCKER_BUILDKIT=1 docker build -t ${CIRCLE_SHA1} --ssh github="$HOME/.ssh/id_rsa" .
            docker tag ${CIRCLE_SHA1} << parameters.reg >>/<< parameters.repo >>:sandbox-latest
            docker tag ${CIRCLE_SHA1} << parameters.reg >>/<< parameters.repo >>:sandbox-"${CIRCLE_TAG}"
            echo Pushing the Docker image...
            docker push << parameters.reg >>/<< parameters.repo >>:sandbox-"${CIRCLE_TAG}"
            docker push << parameters.reg >>/<< parameters.repo >>:sandbox-latest
          name: Update container image

  deploy-image:
    parameters:
      cluster-name:
        type: string
        default: "dev-customer-cluster"
      repo:
        type: string
      deployment:
        type: string

    executor: aws-eks/python3
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          install-kubectl: true
          aws-region: ${AWS_REGION}
          cluster-name: << parameters.cluster-name >>
      - run:
          command: |
            kubectl set image deployment/<< parameters.deployment >> << parameters.deployment >>=${AWS_ECR_URL}/<< parameters.repo >>:"dev-${CIRCLE_BRANCH}-${CIRCLE_PREVIOUS_BUILD_NUM}"
          name: Update container image

  deploy-image-release:
    parameters:
      cluster-name:
        type: string
        default: "sandbox-customer-cluster"
      repo:
        type: string
      deployment:
        type: string

    executor: aws-eks/python3
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          install-kubectl: true
          aws-region: ${AWS_REGION}
          cluster-name: << parameters.cluster-name >>
      - run:
          command: |
            kubectl set image deployment/<< parameters.deployment >> << parameters.deployment >>=${AWS_ECR_URL}/<< parameters.repo >>:"sandbox-${CIRCLE_TAG}"
          name: Update container image

workflows:
  build-and-deploy-release:
    jobs:
      - lint-and-test-job:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

      - build-and-push-image-release:
          requires:
            - lint-and-test-job
          context: AWS-Dev
          repo: issuer-verifier-app
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

      - deploy-image-release:
          requires:
            - build-and-push-image-release
          repo: issuer-verifier-app
          deployment: issuer-verifier
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

  lint-and-test:
    jobs:
      - lint-and-test-job:
          filters:
            branches:
              ignore:
                - development
                - master
                - main
                - test-circleci

  build-and-deploy:
    jobs:
      - lint-and-test-job:
          filters:
            branches:
              only:
                - development
                - master
                - main
                - test-circleci

      - build-and-push-image:
          requires:
            - lint-and-test-job
          context: AWS-Dev
          repo: issuer-verifier-app
          filters:
            branches:
              only:
                - development
                - master
                - main
                - test-circleci
      - deploy-image:
          requires:
            - build-and-push-image
          repo: issuer-verifier-app
          deployment: issuer-verifier
          filters:
            branches:
              only:
                - development
                - master
                - main
                - test-circleci

